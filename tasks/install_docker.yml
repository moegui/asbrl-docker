---
  - name: Add Docker Yum Repository
    yum_repository:
      name: docker-ce
      description: Docker CE Stable - $basearch
      baseurl: https://download.docker.com/linux/centos/7/$basearch/stable
      enabled: 1
      gpgcheck: 1
      gpgkey: https://download.docker.com/linux/centos/gpg

  -   name: Install Docker Packages
      yum:
        name : "{{item.name}}"
        state : "{{item.state}}" 
      vars:
        packages:
        - name: epel-release
          state: present      
        - name: docker-ce
          state: present           
        - name: python-pip
          state: present           
      with_items: "{{ packages }}"
      
  - name: Install Docker Python
    pip:
      name: "{{item.name}}"
      state: "{{item.state}}"
    vars:
      packages:
      - name: docker
        state: present
    with_items: "{{ packages }}"  

  - name: Configure Docker insecure registry
    lineinfile:
      create: true
      path: /etc/docker/daemon.json
      regexp: '^{}'
      line: '{"insecure-registries": ["172.30.0.0/16"]}'

  - name: Enable Docker Service
    systemd:
      name: docker.service
      enabled: true
      state: started         

  - name: Docker Certificates
    gather_facts: false
    hosts: all
    order: sorted
    become: true

    tags:
    - docker_certificates

    tasks:

    - name: Nginx Certificates volume
      docker_volume:
        name: nginx_certs
        state: present     

    - name: CertBot
      docker_container:
        name: certbot
        image: "docker.io/certbot/dns-route53"
        pull: "yes"
        state: "present"
        env: 
          TZ: "Europe/London"
          AWS_ACCESS_KEY_ID: "AKIATOAJKJRK2RV7D2XV"
          AWS_SECRET_ACCESS_KEY: "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"
        restart_policy: "on-failure"
        command: "certonly --dns-route53 --register-unsafely-without-email --agree-tos -d violet-book.com -d www.violet-book.com -d vpl-staging.violet-book.com -d ci.violet-book.com"
        volumes:
          - nginx_certs:/etc/letsencrypt

    - name: CertBot Renew
      docker_container:
        name: certbot_renew
        image: "docker.io/certbot/dns-route53"
        pull: "yes"
        state: "present"
        env: 
          TZ: "Europe/London"
          AWS_ACCESS_KEY_ID: "AKIATOAJKJRK2RV7D2XV"
          AWS_SECRET_ACCESS_KEY: "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"
        restart_policy: "on-failure"
        command: "renew"
        volumes:
          - nginx_certs:/etc/letsencrypt
